//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public Lite.RigidBodyComponent rigidBody { get { return (Lite.RigidBodyComponent)GetComponent(CoreComponentIds.RigidBody); } }
        public bool hasRigidBody { get { return HasComponent(CoreComponentIds.RigidBody); } }

        public Entity AddRigidBody(float newMass, Lite.Vector2 newForce, Lite.Vector2 newVelocity) {
            var component = CreateComponent<Lite.RigidBodyComponent>(CoreComponentIds.RigidBody);
            component.mass = newMass;
            component.force = newForce;
            component.velocity = newVelocity;
            return AddComponent(CoreComponentIds.RigidBody, component);
        }

        public Entity ReplaceRigidBody(float newMass, Lite.Vector2 newForce, Lite.Vector2 newVelocity) {
            var component = CreateComponent<Lite.RigidBodyComponent>(CoreComponentIds.RigidBody);
            component.mass = newMass;
            component.force = newForce;
            component.velocity = newVelocity;
            ReplaceComponent(CoreComponentIds.RigidBody, component);
            return this;
        }

        public Entity RemoveRigidBody() {
            return RemoveComponent(CoreComponentIds.RigidBody);
        }
    }
}

    public partial class CoreMatcher {

        static IMatcher _matcherRigidBody;

        public static IMatcher RigidBody {
            get {
                if(_matcherRigidBody == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.RigidBody);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherRigidBody = matcher;
                }

                return _matcherRigidBody;
            }
        }
    }

    public partial class GameObjectsMatcher {

        static IMatcher _matcherRigidBody;

        public static IMatcher RigidBody {
            get {
                if(_matcherRigidBody == null) {
                    var matcher = (Matcher)Matcher.AllOf(GameObjectsComponentIds.RigidBody);
                    matcher.componentNames = GameObjectsComponentIds.componentNames;
                    _matcherRigidBody = matcher;
                }

                return _matcherRigidBody;
            }
        }
    }
